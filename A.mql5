//+------------------------------------------------------------------+  
//| Expert: SuperTrend Grid EA                                      |  
//| Function: เปิด grid orders ทุก 20 pips ตามเทรนด์ และปิดรวบไม้เมื่อ trend เปลี่ยน |  
//+------------------------------------------------------------------+  
#property copyright "Your Name"  
#property link      ""  
#property version   "1.02"  
#include <Trade\Trade.mqh>  
#include <Trade\PositionInfo.mqh>  

//--- EA Inputs  
input int      ATRPeriod          = 22;      // ATR period  
input double   Multiplier         = 3.0;     // ATR multiplier  
input int      GridDistancePips   = 20;      // Grid gap in pips  
input double   LotSize            = 0.01;    // Lot size  
input ulong    MagicNumber        = 20250727;// Magic number  

//--- Globals  
CTrade         trade;                // Trade object  
int            stHandle;             // Indicator handle  
//--- Previous trend direction: 1=UP, -1=DOWN, 0=unset  
int            prevDir = 0;  

//+------------------------------------------------------------------+  
//| Expert initialization                                           |  
//+------------------------------------------------------------------+  
int OnInit()  
{  
   //--- Validate inputs  
   if(ATRPeriod<=0 || Multiplier<=0 || GridDistancePips<=0 || LotSize<=0)  
   {  
      Print("Invalid input parameters");  
      return(INIT_PARAMETERS_INCORRECT);  
   }  
   //--- Setup trade  
   trade.SetExpertMagicNumber(MagicNumber);  
   trade.SetTypeFillingBySymbol(_Symbol);  
   trade.SetMarginMode();  
   //--- Load custom SuperTrend (buffer 2 = direction)  
   stHandle = iCustom(_Symbol,_Period,"SuperTrend",ATRPeriod,Multiplier);  
   if(stHandle==INVALID_HANDLE)  
   {  
      Print("Cannot load SuperTrend indicator. Error=",GetLastError());  
      return(INIT_FAILED);  
   }  
   return(INIT_SUCCEEDED);  
}  

//+------------------------------------------------------------------+  
//| Expert deinitialization                                         |  
//+------------------------------------------------------------------+  
void OnDeinit(const int reason)  
{  
   if(stHandle!=INVALID_HANDLE) IndicatorRelease(stHandle);  
}  

//+------------------------------------------------------------------+  
//| Expert tick                                                     |  
//+------------------------------------------------------------------+  
void OnTick()  
{  
   int currDir;  
   //--- รับค่าทิศทาง SuperTrend ของแท่งปิดล่าสุด  
   if(!GetSuperTrendDirection(currDir)) return;  
   //--- ตรวจ trend change  
   if(prevDir==0)  
   {  
      prevDir = currDir;  
   }  
   else if(currDir!=prevDir)  
   {  
      //--- ปิด positions ฝั่งตรงข้าม  
      if(prevDir==1) CloseAll(POSITION_TYPE_BUY);  
      else             CloseAll(POSITION_TYPE_SELL);  
      //--- พิมพ์ log  
      string sPrev = (prevDir==1 ? "UP" : "DOWN");  
      string sCurr = (currDir==1 ? "UP" : "DOWN");  
      PrintFormat("Trend changed from %s to %s. Closed opposite positions.", sPrev, sCurr);  
      prevDir = currDir;  
   }  
   //--- จัดการเปิด grid  
   ManageGrid(currDir);  
}  

//+------------------------------------------------------------------+  
//| อ่าน SuperTrend Direction Buffer (1=up, -1=down)                |  
//+------------------------------------------------------------------+  
bool GetSuperTrendDirection(int &direction)  
{  
   double dirBuf[2];  
   if(CopyBuffer(stHandle,2,1,2,dirBuf)!=2) return false;  
   direction = (int)dirBuf[0];  
   return true;  
}  

//+------------------------------------------------------------------+  
//| จัดการ Grid Orders                                              |  
//+------------------------------------------------------------------+  
void ManageGrid(int trend)  
{  
   int cntBuy  = CountPos(POSITION_TYPE_BUY);  
   int cntSell = CountPos(POSITION_TYPE_SELL);  
   double point = _Point;  
   if(trend==1)  
   {  
      if(cntBuy==0)  
         trade.Buy(LotSize,_Symbol);  
      else  
      {  
         double lastPrice = LastOpen(POSITION_TYPE_BUY);  
         double ask       = SymbolInfoDouble(_Symbol,SYMBOL_ASK);  
         if(lastPrice - ask >= GridDistancePips * point)  
            trade.Buy(LotSize,_Symbol);  
      }  
   }  
   else  
   {  
      if(cntSell==0)  
         trade.Sell(LotSize,_Symbol);  
      else  
      {  
         double lastPrice = LastOpen(POSITION_TYPE_SELL);  
         double bid       = SymbolInfoDouble(_Symbol,SYMBOL_BID);  
         if(bid - lastPrice >= GridDistancePips * point)  
            trade.Sell(LotSize,_Symbol);  
      }  
   }  
}  

//+------------------------------------------------------------------+  
//| ปิด positions ทุกตำแหน่งาของ type ที่ระบุ                      |  
//+------------------------------------------------------------------+  
void CloseAll(ENUM_POSITION_TYPE type)  
{  
   CPositionInfo pos;  
   for(int idx=0; idx<PositionsTotal(); idx++)  
   {  
      if(!pos.SelectByIndex(idx)) continue;  
      if(pos.Symbol()!=_Symbol || pos.Magic()!=MagicNumber) continue;  
      if((ENUM_POSITION_TYPE)pos.Type()!=type) continue;  
      trade.PositionClose(pos.Ticket());  
   }  
}  

//+------------------------------------------------------------------+  
//| นับจำนวน positions ของ type ที่ระบุ                             |  
//+------------------------------------------------------------------+  
int CountPos(ENUM_POSITION_TYPE type)  
{  
   CPositionInfo pos;  
   int cnt=0;  
   for(int idx=0; idx<PositionsTotal(); idx++)  
   {  
      if(!pos.SelectByIndex(idx)) continue;  
      if(pos.Symbol()==_Symbol && pos.Magic()==MagicNumber && (ENUM_POSITION_TYPE)pos.Type()==type)  
         cnt++;  
   }  
   return cnt;  
}  

//+------------------------------------------------------------------+  
//| คืนราคาที่เปิดล่าสุดของ type ที่ระบุ                            |  
//+------------------------------------------------------------------+  
double LastOpen(ENUM_POSITION_TYPE type)  
{  
   CPositionInfo pos;  
   datetime bestTime=0;  
   double    price=0;  
   for(int idx=0; idx<PositionsTotal(); idx++)  
   {  
      if(!pos.SelectByIndex(idx)) continue;  
      if(pos.Symbol()!=_Symbol || pos.Magic()!=MagicNumber) continue;  
      if((ENUM_POSITION_TYPE)pos.Type()!=type) continue;  
      if(pos.Time() > bestTime)  
      {  
         bestTime = pos.Time();  
         price    = pos.PriceOpen();  
      }  
   }  
   return price;  
}  

//+------------------------------------------------------------------+  
//| Self-check:                                                     |  
//| 1. คอมไพล์ผ่าน ไม่มี warnings เกี่ยวกับ type conversion        |  
//| 2. ทดสอบกรณี:                                                  |  
//|    • trend UP: เปิด Buy, ราคาร่วง 20 pips → เปิด Buy ใหม่        |  
//|    • trend เปลี่ยนเป็น DOWN: ปิด Buy ทั้งหมด                    |  
//|    • trend DOWN: เปิด Sell, ราคาเด้งขึ้น 20 pips → เปิด Sell ใหม่|  
//|    • trend เปลี่ยนเป็น UP: ปิด Sell ทั้งหมด                    |  
//| 3. คาดการณ์ output:                                            |  
//|    "Trend changed from UP to DOWN..."                         |  
//+------------------------------------------------------------------+  
